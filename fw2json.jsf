// Fireworks Extension: Command
// Create JSON from Fireworks PNG.
// version: 0.0.1
// auther: @littlebusters
// license: MIT

(function()
{
	var d = fw.getDocumentDOM();
	var fwJSON = {"documentMeta": {"grid" : {}}, "pages": []};
	var pageSetter = d.getPageSetter();
	// var currentFilePath = d.filePathForSave.slice( 0, d.filePathForSave.lastIndexOf( '/' ) + 1 );
	var layerType = {
		"[object RectanglePrimitive]": "rectangle",
		"[object Text]": "text",
		"[object Path]": "path",
		"[object Group]": "layer group",
		"[object Instance]": "symbol",
		"[object SliceHotspot]": "slice",
		"[object Layer]": "layer",
		"[object Image]": "bitmap"
	}

	fwJSON.documentMeta.grid = {"gridSize": {"x": d.gridSize.x, "y": d.gridSize.y}};
	fwJSON.documentMeta.grid.gridOrigin = {"x": d.gridOrigin.x, "y": d.gridOrigin.y};
	fwJSON.documentMeta.pageCount = d.pagesCount;
	fwJSON.documentMeta.docName = d.docTitleWithoutExtension;

	for ( var pageIndex = 0; pageIndex < fwJSON.documentMeta.pageCount; pageIndex++ ) {
		pageSetter.pageNum = pageIndex;
		d = fw.getDocumentDOM();

		fwJSON.pages[pageIndex] = {};
		fwJSON.pages[pageIndex].pageName = d.pageName;
		fwJSON.pages[pageIndex].backgroundColor = d.backgroundColor;
		fwJSON.pages[pageIndex].width = d.width;
		fwJSON.pages[pageIndex].height = d.height;
		fwJSON.pages[pageIndex].guide = {"x": d.guides.hGuides, "y": d.guides.vGuides};
		fwJSON.pages[pageIndex].layers = [];

		fwJSON.pages[pageIndex].layers = getLayerAttrs( d.layers );
	};

	console.log( fwJSON );

	function getLayerAttrs( _tgt ) {
		var layerData = [];

		for ( var layerIndex = 0; layerIndex < _tgt.length; layerIndex++ ) {
			layerData[layerIndex] = {};
			layerData[layerIndex].layerName = _tgt[layerIndex].name;
			layerData[layerIndex].parentLayerNum = d.getParentLayerNum( layerIndex );
			layerData[layerIndex].elems = getElemAttrs( _tgt[layerIndex].elems );
		}

		return layerData;
	}

	var FwtoJSON = FwtoJSON || {};

	// FwtoJSON.prototype.getElemsData = function ( _tgt ) {

	// }
	function getElemAttrs( _tgt ) {
		var elemData = [];

		for ( var childIndex = 0, elemIndex = 0 ; childIndex < _tgt.length; childIndex++ ) {
			console.log( _tgt[childIndex].toString() );
			if ( '[object Layer]' != _tgt[childIndex].toString() ) {
				elemData[elemIndex] = {};
				elemData[elemIndex].type = layerType[_tgt[childIndex].toString()];
				elemData[elemIndex].name = _tgt[childIndex].name || elemData[elemIndex].type;
				elemData[elemIndex].width = _tgt[childIndex].width;
				elemData[elemIndex].height = _tgt[childIndex].height;
				elemData[elemIndex].top = _tgt[childIndex].top;
				elemData[elemIndex].left = _tgt[childIndex].left;
				elemData[elemIndex].blendMode = _tgt[childIndex].blendMode;
				elemData[elemIndex].opacity = _tgt[childIndex].opacity;
				elemData[elemIndex].visible = _tgt[childIndex].visible;
				elemIndex++;
			}
		}

		return elemData;
	}

	function getFillAttrs( _tgt ) {
		var elemData = {};

		elemData.fillColor = _tgt.fillColor;
		elemData.feather = _tgt.fill.feather;

		return elemData;
	}

	function getGradientAtts( _tgt ) {
		var elemData = {};

		elemData.gradientType = _tgt.fill.shape;
		elemData.gradientStopPoint = [{}, {}, {}];
		elemData.gradientStopPoint[0].x = _tgt.fillHandle1.x;
		elemData.gradientStopPoint[0].y = _tgt.fillHandle1.y;
		elemData.gradientStopPoint[1].x = _tgt.fillHandle2.x;
		elemData.gradientStopPoint[1].y = _tgt.fillHandle2.y;
		elemData.gradientStopPoint[2].x = _tgt.fillHandle3.x;
		elemData.gradientStopPoint[2].y = _tgt.fillHandle3.y;

		return elemData;
	}

	function getGradientStop( _tgt ) {
		var elemData = [];
		var currentPoints = [];

		for ( var i = _tgt.nodes.length - 1; i >= 0; i-- ) {
			currentPoints.push( _tgt.nodes[i] );
		};
		for ( var i = _tgt.opacityNodes.length - 1; i >= 0; i-- ) {
			currentPoints.push( _tgt.opacityNodes[i] );
		};

		return currentPoints;
	}
	getGradientStop( sel[0].pathAttributes.fill.gradient );

	// var folderURL = fw.browseForFolderURL( 'Choose Export Folder', currentFilePath);
	// var saveURL = Files.getDirectory( folderURL ) + '/' + fwJSON.documentMeta.docName + '.txt';
	// fw.textOutputEncoding = 'utf-8';
	// Files.createFile( saveURL, '.txt', '');
	// var fileWrite = Files.open( saveURL, true );
	// fileWrite.writeUTF8( fwJSON.toString() );
	// fileWrite.close();

	// console.log(saveURL);

})();